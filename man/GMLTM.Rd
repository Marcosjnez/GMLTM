% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GMLTM.R

\name{GMLTM}
\alias{GMLTM}
\title{The Generalized Multidimensional Latent Trait Model}
\usage{
GMLTM(data, Q, components, iters = 2000, iter_warmup = 1000, chains = 2, seed = 1606)
}
\arguments{
\item{data}{\eqn{n \times p}  data.frame or data matrix with the individuals in rows and items in columns.}

\item{Q}{\eqn{p \times q}  Q matrix.}

\item{components}{List of \eqn{d} elements relating each component to a vector of rules.}

\item{iters}{Number of samples from the posterior distribution.}

\item{chains}{Number of Markov chains.}

\item{iter_warmup}{Number of samples to discard then initializing a Markov chain.}

\item{interval}{Probability associated with the credible intervals.}

\item{seed}{Random seed.}

\item{parallel_chains}{Number of chains to run in parallel cores.}

\item{threads_per_chain}{Number of cores to run within a chain.}

\item{...}{Additional arguments to pass to the \code{sample} function from \code{cmdstanr}.}
}
\value{
\code{cmdstan} object:
}
\description{
Estimate the parameters of the GMLTM.
}
\details{
\code{GMLTM} Estimate the Generalized Multidimensional Latent Trait Model (GMLTM-D) in its Bayesian version. This model is capable of analyzing data arising from items composed by the addition of rules or cognitive operations, incorporating three parameters of item response theory. It can be implemented when the rules can be explained by various components. To use it, it is necessary to define a matrix Q where the rules for each item are specified, as well as a components matrix indicating to which dimension these rules belong.
}
\references{
Ramírez, E.S.; Jiménez, M.; Franco, V.R.; Alvarado, J.M. (2024). Delving into the Complexity of Analogical Reasoning: A Detailed Exploration with the Generalized Multicomponent Latent Trait Model for Diagnosis. \emph{Journal of Intelligence}. preprint.
}

\examples{
  # Load the data
  data(analogy)
  
  # These data correspond to the study:
  # Blum, D., Holling, H., Galibert, M. S., & Forthmann, B. (2016). Task difficulty prediction of figural analogies. Intelligence, 56, 72-81.
  # Define the dataset

  dataset <- analogy
  
  # Define the Q matrix with item rules
  Q <- structure(c(0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1,
                   1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
                   0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0,
                   0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1,
                   0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
                   0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,
                   1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1), dim = c(27L, 5L), dimnames = list(
                     c("item 1", "item 2", "item 3", "item 4", "item 5", "item 6",
                       "item 7", "item 8", "item 9", "item 10", "item 11", "item 12",
                       "item 13", "item 14", "item 15", "item 16", "item 17", "item 18",
                       "item 19", "item 20", "item 21", "item 22", "item 23", "item 24",
                       "item 25", "item 26", "item 27"), c("rot_fig", "rot_trap",
                                                           "reflection", "subt_seg", "mov_point"))) #The labels correspond to the names of the rules.
  
  
  # Define the components list
  components <- list(global = c(1, 2, 3), local = c(4, 5))
  
  # Define the fit1 object
  fit1 <- GMLTM(dataset, Q, components, iters = 2000, iter_warmup = 500,
                quantiles = c(0.05, 0.5, 0.95), chains = 2, parallel_chains = 2)
   
  # Print the difficulty parameters for each rule in each component              
  fit1$EAP$eta 
  
  # Print the difficulty parameter for each item. For items with rules from both components, print both difficulties.
  fit1$EAP$beta
  
  # Print the discriminations of each item. When an item is composed of rules from both components, provide a discrimination for each component.
  fit1$EAP$alpha
  
  # Print the guessing parameter results for each item.
  fit1$EAP$guessing
  
  # Marginal reliability for each component
  reliability(fit1)
  
  # Print all ppchecks of the model
  check2 <- ppchecks(fit1)
}


